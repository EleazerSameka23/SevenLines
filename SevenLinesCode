import network
import time
import dht
import machine
from umqtt.simple import MQTTClient

# Konfigurasi WiFi
WIFI_SSID = "POCO"     
WIFI_PASSWORD = "ramodal123"  

# Konfigurasi Ubidots MQTT
UBIDOTS_BROKER = "industrial.api.ubidots.com"
UBIDOTS_TOKEN = "BBUS-Fejwy49kzbSPIwH0vTcu4ec60Q55sF"  
UBIDOTS_DEVICE = "seven-lines" 
UBIDOTS_VARIABLE_TEMP = "temperature"  
UBIDOTS_VARIABLE_HUM = "humidity" 
UBIDOTS_VARIABLE_PIR = "motion" 

# Inisialisasi Sensor DHT22
DHT_PIN = 4  
sensor_dht = dht.DHT22(machine.Pin(DHT_PIN))

# Inisialisasi Sensor PIR
PIR_PIN = 14 
sensor_pir = machine.Pin(PIR_PIN, machine.Pin.IN)

# Fungsi untuk koneksi WiFi
def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(WIFI_SSID, WIFI_PASSWORD)

    print("Menghubungkan ke WiFi...", end="")
    for _ in range(10):
        if wlan.isconnected():
            print("\nWiFi Terhubung! IP:", wlan.ifconfig()[0])
            return True
        print(".", end="", flush=True)
        time.sleep(1)
    
    print("\nGagal terhubung ke WiFi!")
    return False


def send_to_ubidots(temperature, humidity, motion_detected):
    client = MQTTClient("esp32", UBIDOTS_BROKER, user=UBIDOTS_TOKEN, password="", port=1883)
    client.connect()
    
    payload = (
        '{"%s": {"value": %.2f}, "%s": {"value": %.2f}, "%s": {"value": %d}}' 
        % (UBIDOTS_VARIABLE_TEMP, temperature, UBIDOTS_VARIABLE_HUM, humidity, UBIDOTS_VARIABLE_PIR, motion_detected)
    )
    topic = "/v1.6/devices/%s" % UBIDOTS_DEVICE
    
    print("Mengirim data ke Ubidots:", payload)
    client.publish(topic, payload)
    client.disconnect()


if connect_wifi():
    while True:
        try:
           
            sensor_dht.measure()  # Baca sensor
            temp = sensor_dht.temperature()  # Suhu dalam Celcius
            hum = sensor_dht.humidity()  # Kelembaban
            
            
            motion = sensor_pir.value()  # 1 jika ada gerakan, 0 jika tidak
            
            print("Suhu:", temp, "Â°C | Kelembaban:", hum, "% | Gerakan:", motion)
            send_to_ubidots(temp, hum, motion)  # Kirim data ke Ubidots
            
        except OSError as e:
            print("Gagal membaca sensor:", e)
        
        time.sleep(1)  # Kirim data setiap 10 detik

